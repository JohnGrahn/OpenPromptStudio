FROM python:3.11

WORKDIR /

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    wget \
    zip \
    unzip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install bun
RUN curl -fsSL https://bun.sh/install | bash
ENV PATH="/root/.bun/bin:${PATH}"

RUN bun --version

# Create React app with Vite
RUN bunx create-vite@latest frontend --template react-ts && \
    cd frontend && \
    bun install && \
    bun add -d @types/node && \
    bun add tailwindcss postcss autoprefixer && \
    bun add lucide-react axios recharts @radix-ui/react-icons tailwind-merge class-variance-authority clsx react-hook-form date-fns && \
    bunx tailwindcss init -p

# Configure project first
RUN echo 'import { defineConfig } from "vite"\nimport react from "@vitejs/plugin-react"\nimport path from "path"\n\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n    port: 3000,\n    host: "0.0.0.0"\n  },\n  resolve: {\n    alias: {\n      "@": path.resolve(__dirname, "./src"),\n    },\n  },\n})' > /frontend/vite.config.ts && \
    echo '/** @type {import("tailwindcss").Config} */\nexport default {\n  content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}' > /frontend/tailwind.config.js && \
    echo '@tailwind base;\n@tailwind components;\n@tailwind utilities;' > /frontend/src/index.css && \
    echo '{\n  "compilerOptions": {\n    "target": "ES2020",\n    "useDefineForClassFields": true,\n    "lib": ["ES2020", "DOM", "DOM.Iterable"],\n    "module": "ESNext",\n    "skipLibCheck": true,\n    "moduleResolution": "bundler",\n    "allowImportingTsExtensions": true,\n    "resolveJsonModule": true,\n    "isolatedModules": true,\n    "noEmit": true,\n    "jsx": "react-jsx",\n    "strict": false,\n    "noUnusedLocals": false,\n    "noUnusedParameters": false,\n    "noFallthroughCasesInSwitch": true,\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./src/*"]\n    }\n  },\n  "include": ["src"],\n  "references": [{ "path": "./tsconfig.node.json" }]\n}' > /frontend/tsconfig.json && \
    echo '{\n  "compilerOptions": {\n    "composite": true,\n    "skipLibCheck": true,\n    "module": "ESNext",\n    "moduleResolution": "bundler",\n    "allowSyntheticDefaultImports": true\n  },\n  "include": ["vite.config.ts"]\n}' > /frontend/tsconfig.node.json

# Create utils directory and add utils.ts
RUN mkdir -p /frontend/src/lib && \
    echo 'import { type ClassValue, clsx } from "clsx"\nimport { twMerge } from "tailwind-merge"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}' > /frontend/src/lib/utils.ts

# Now install and configure shadcn
WORKDIR /frontend
RUN echo '{"$schema":"https://ui.shadcn.com/schema.json","style":"new-york","rsc":false,"tsx":true,"tailwind":{"config":"tailwind.config.js","css":"src/index.css","baseColor":"slate","cssVariables":true},"aliases":{"utils":"@/lib/utils","components":"@/components","hooks":"@/hooks"}}' > components.json && \
    bun add -g shadcn && \
    bunx shadcn add button card form input label select textarea toast && \
    sed -i 's/@\/components\/hooks\/use-toast/@\/hooks\/use-toast/g' src/components/ui/toaster.tsx && \
    bun run build

EXPOSE 3000